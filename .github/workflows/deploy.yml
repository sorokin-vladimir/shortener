name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create .env file for testing
      run: |
        echo "DOMAIN=${{ secrets.DOMAIN }}" > .env
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
        echo "TELEGRAM_API_KEY=${{ secrets.TELEGRAM_API_KEY }}" >> .env
        echo "WEB_PORT=${{ secrets.WEB_PORT }}" >> .env
        echo "API_QUOTA=${{ secrets.API_QUOTA }}" >> .env
        echo "EXPIRY_HOURS=${{ secrets.EXPIRY_HOURS }}" >> .env
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

    - name: Run tests with Docker Compose
      run: |
        docker compose --env-file .env -f configs/docker/docker-compose.yml -f configs/docker/docker-compose.test.yml up --abort-on-container-exit --exit-code-from shortener

  publish:
    runs-on: ubuntu-latest

    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Trigger Render Deploy
      run: |
        curl https://api.render.com/deploy/${{ secrets.RENDER_DEPLOY_HOOK }}
