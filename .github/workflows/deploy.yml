name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create .env.test file for testing
      run: |
        echo "DOMAIN=${{ secrets.DOMAIN }}" > .env.test
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env.test
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env.test
        echo "TELEGRAM_API_KEY=qwerty" >> .env.test
        echo "PORT=${{ secrets.PORT }}" >> .env.test
        echo "WEB_PORT=${{ secrets.WEB_PORT }}" >> .env.test
        echo "CLIENT_PORT=${{ secrets.CLIENT_PORT }}" >> .env.test
        echo "API_QUOTA=${{ secrets.API_QUOTA }}" >> .env.test
        echo "EXPIRY_HOURS=${{ secrets.EXPIRY_HOURS }}" >> .env.test
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env.test

    - name: Install Mise
      uses: jdx/mise-action@v2

    - name: Run tests with Docker Compose
      run : mise test

  Build:
    runs-on: ubuntu-latest

    needs: Test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/shortener:latest -f app/configs/docker/Dockerfile.prod ./app/

    - name: Tag Docker image
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/shortener:latest ${{ secrets.DOCKER_USERNAME }}/shortener:${{ github.sha }}

    - name: Push Docker image to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/shortener:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/shortener:${{ github.sha }}
