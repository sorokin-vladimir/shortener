# Stage 1: Build frontend
FROM node:22-alpine AS frontend
WORKDIR /app
COPY ./client .
RUN npm install && npm run build

# Stage 2: Build backend
FROM golang:1.23-alpine AS backend
WORKDIR /app
COPY ./app .
COPY --from=frontend /app/dist ./static
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o app main.go

# Stage 3: Nginx
FROM nginx:1.26.2-perl AS proxy
WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends gettext-base && rm -rf /var/lib/apt/lists/*
COPY ./configs/nginx/nginx.templ.prod.conf /etc/nginx/nginx.template.conf
COPY --from=backend /app /app

COPY ./configs/startup.sh /app/startup.sh
RUN chmod +x /app/startup.sh

CMD ["/app/startup.sh"]
